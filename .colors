#!/usr/bin/env bash
#
#                       88
#                       888
#                       888
#       .d8888b .d88b.  888  .d88b.  888d888 .d8888b
#      d88P"   d88""88b 888 d88""88b 888P"   88K
#      888     888  888 888 888  888 888     "Y8888b.
#  d8b Y88b.   Y88..88P 888 Y88..88P 888          X88
#  Y8P  "Y8888P "Y88P"  888  "Y88P"  888      88888P'
#
#
# -------------------------------------------------------------------------
# Version: 0.1
# File: .colors
# Source: https://github.com/devpunks
# Author: Ahmid-Ra (github.com/snuggs)
# Maintainer: devPunks <https://github.com/devpunks>
# Description: Color configuration
# -------------------------------------------------------------------------
#
#   - Benchmark - https://imgur.com/xIyuaYt
#   - https://github.com/termstandard/colors
#   - https://ditig.com/256-colors-cheat-sheet
#   - https://stackoverflow.com/questions/4842424
#   - https://stackoverflow.com/questions/27159322
#   - https://tldp.org/HOWTO/Bash-Prompt-HOWTO/c583.html
#   - https://misc.flogisoft.com/bash/tip_colors_and_formatting
#   - https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797
#   - https://wikipedia.org/wiki/List_of_monochrome_and_RGB_color_formats
#   - escapes vs. tput - https://unix.stackexchange.com/questions/274453
#   - ANSI Escape Codes - https://en.m.wikipedia.org/wiki/ANSI_escape_code
#   - TERM COLOR DISCUSSION - https://news.ycombinator.com/item?id=30483899
#   - https://tuxthink.blogspot.com/2012/02/changing-font-and-background-of.html?m=1
#   - https://unix.stackexchange.com/questions/755954/how-does-a-terminal-produce-accurate-colors
#
# Note: Some control escape sequences, like \e for ESC, are not guaranteed
# to work in all languages and compilers. It is recommended to use
# the decimal 27, octal \033, or hex \x1B representation as escape code.
#
# -------------------------------------------------------------------------
# {{{ ANSI Escape Sequences
#   - https://en.m.wikipedia.org/wiki/ANSI_escape_code#8-bit
#   - https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797
#
# Standard Escape Codes
# iCtrl-Keys: \e \x9B 
# Octal: \033
# Unicode: \u001b
# Hexadecimal: \x1B
# Decimal: 27
#
# Delimited by opening square bracket ([), known as a Control Sequence Introducer (CSI),
# optionally followed by arguments and the command itself.
# Arguments are delimeted by semi colon (;)

# }}}

# -------------------------------------------------------------------------
# {{{ ANSI Styles

# ┏━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃ ### ┃ GNOME Terminal          ┃ xterm                   ┃ non-GUI TTY
# ┡━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━┩
# │   0 │ «reset style+colors»    │ «reset style+colors»    │ «reset style+colors
# ├─────┼─────────────────────────┼─────────────────────────┼────────────────
# │   1 │ +bold, +brighter color  │ +bold, +brighter color  │ +brighter color
# │   2 │ +fainter color          │ +fainter color          │ +forced grey   
# │   3 │ +italic                 │ +italic                 │ +forced green  
# │   4 │ +underline              │ +underline              │ +forced cyan   
# │   5 │ «no effect»             │ +blink                  │ «no effect»    
# │   7 │ +invert colors          │ +invert colors          │ +invert colors 
# │   8 │ +invisible              │ +invisible              │ «no effect»    
# │     │                         │   ● underline appears   │                
# │   9 │ +strikethrough          │ +strikethrough          │ «no effect»    
# ├─────┼─────────────────────────┤                         ├────────────────
# │  21 │ -bold, -brighter color, │ +double underline       │ -brighter color
# │  22 │ -bold, -brighter color, │ -bold, -brighter color, │ -brighter color
# │  23 │ -italic                 │ -italic                 │ -forced green  
# │  24 │ -underline              │ -underline,             │ -forced cyan   
# │  25 │ «no effect»             │ -blink                  │ «no effect»    
# │  27 │ -invert colors          │ -invert colors          │ -invert colors 
# │  28 │ -invisible              │ -invisible              │ «no effect»    
# │  29 │ -strikethrough          │ -strikethrough          │ «no effect»    


# }}}

#==========================================================================
# {{{ Environment Color Codes
# =========================================================================
export CLICOLOR=1 # Defaults - https://stackoverflow.com/questions/41849875

# https://the.exa.website/docs/colour-themes
export EXA_COLORS="
  :hd=1;4;38;5;13;48;5;8:sb=1;4;38;5;13
  :sn=1;4;38;5;13:da=3;38;5;13:uu=2;38;5;13:gd=1;4;38;5;2:
"

# LS_COLORS
export DIRCOLORS="$HOME/.dircolors"
# https://gnu.org/software/coreutils/manual/html_node/dircolors-invocation.html
# TODO: Fix 
[ -e "$DIRCOLORS" ] && eval $( dircolors -b "$DIRCOLORS" )
[ -e "$DIRCOLORS" ] && source "$DIRCOLORS"

# https://askubuntu.com/questions/1042234
# https://gnu.org/software/grep/manual/grep.html#index-GREP_005fCOLORS-environment-variable
export GREP_COLORS="
  :fn=1;4:se=1:ln=1;2;3:sl=2:cx=2;3;9:ms=0;1;4;7:mc=0;1;4;7:mt=0;1;4;7:bn=31:
"

# }}}

#==========================================================================
# {{{ IBM aixterm,16-Color Codes
#   The 16-color feature is borrowed from IBM aixterm,
#   which maps 16 codes each for foreground and background onto two ranges;
#   - https://en.m.wikipedia.org/wiki/Color_Graphics_Adapter
#   - https://en.m.wikipedia.org/wiki/ANSI_escape_code#8-bit
#   - https://retrocomputing.stackexchange.com/questions/20043
#   - https://wikipedia.org/wiki/List_of_monochrome_and_RGB_color_formats#4-bit_RGBI
# =========================================================================

# Foreground onto 30-37, and 90-97
# -------------------------------------------------------------------------
# [30m - Black
# [31m - Red
# [32m - Green
# [33m - Yellow
# [34m - Blue
# [35m - Purple
# [36m - Cyan
# [37m - Grey
#
# [39m - Reset

# [90m - Dark Grey
# [91m - Light Red
# [92m - Light Green
# [93m - Light Yellow
# [94m - Light Blue
# [95m - Light Purple
# [96m - Turquoise
# [97m - Off White

#┏━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
#┃  ### ┃ GNOME Terminal          ┃ xterm                   ┃ non-GUI TTY ┃
#┡━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━┩
# │  30 │ Very dark grey          │ Black                   │ Black
# │  31 │ Dull red                │ Red                     │ Light red
# │  32 │ Dull green              │ Light green             │ Light green
# │  33 │ Dull yellow             │ Yellow                  │ Yellow
# │  34 │ Greyish blue            │ Dark blue               │ Sky blue
# │  35 │ Dull purple             │ Purple                  │ Purple
# │  36 │ Teal                    │ Cyan                    │ Cyan
# │  37 │ Light grey              │ Light grey              │ Light grey

# │  39 │ «Reset color»           │ «Reset color»           │ «Reset color»

# │  90 │ Dark grey               │ Dull grey               │ Dull grey
# │  91 │ Red                     │ Bright red              │ Bright red
# │  92 │ Lime green              │ Bright green            │ Bright green
# │  93 │ Yellow                  │ Bright yellow           │ Pure yellow
# │  94 │ Light greyish blue      │ Dull blue               │ Deep blue
# │  95 │ Light purple            │ Magenta                 │ Magenta
# │  96 │ Cyan                    │ Bright cyan             │ Bright cyan
# │  97 │ Off white               │ White                   │ White
#──────────────────────────────────────────────────────────────────────────

# Background onto 40-47, and 100-107
# -------------------------------------------------------------------------
# [40m - Black Background
# [41m - Red Background
# [42m - Green Background
# [43m - Yellow Background
# [44m - Blue Background
# [45m - Purple Background
# [46m - Cyan Background
# [47m - Grey Background
#
# [49m - Reset

# [100m - Dark Grey Background
# [101m - Light Red Background
# [102m - Light Green Background
# [103m - Yellow Background
# [104m - Light Blue Background
# [105m - Light Purple Background
# [106m - Turquoise Background
# [107m - Off White Background

#┏━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
#┃  ### ┃ GNOME Terminal          ┃ xterm                   ┃ non-GUI TTY ┃
#┡━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━┩
# │  40 │ Very dark grey          │ Black                   │ Black
# │  41 │ Dull red                │ Red                     │ Light red
# │  42 │ Dull green              │ Light green             │ Light green
# │  43 │ Dull yellow             │ Yellow                  │ Yellow
# │  44 │ Greyish blue            │ Dark blue               │ Sky blue
# │  45 │ Dull purple             │ Purple                  │ Purple
# │  46 │ Teal                    │ Cyan                    │ Cyan

# │  49 │ «Reset color»           │ «Reset color»           │ «Reset color»

# │ 100 │ Dark grey               │ Dull grey               │ Black
# │ 101 │ Red                     │ Bright red              │ Light red
# │ 102 │ Lime green              │ Bright green            │ Light green
# │ 103 │ Yellow                  │ Bright yellow           │ Yellow
# │ 104 │ Light greyish blue      │ Dull blue               │ Sky blue
# │ 105 │ Light purple            │ Magenta                 │ Purple
# │ 106 │ Cyan                    │ Bright cyan             │ Cyan
# │ 107 │ Off white               │ White                   │ Light grey
#──────────────────────────────────────────────────────────────────────────

function 16Colors () {
  printf "\n "
  printf "%-7s%-7s%-7s%-7s%-7s%-7s%-7s%-7s" \
    '  40m' '  41m' '  42m' '  43m' '  44m' '  45m' '  46m' '  47m'
  printf "%-7s%-7s%-7s%-7s%-7s%-7s%-7s%-7s" \
    ' 100m' ' 101m' ' 102m' ' 103m' ' 104m' ' 105m' ' 106m' ' 107m'
  echo

  for FGs in '    m' '   1m' \
    '  30m' '1;30m' '  31m' '1;31m' '  32m' '1;32m' '  33m' '1;33m' \
    '  34m' '1;34m' '  35m' '1;35m' '  36m' '1;36m' '  37m' '1;37m' \
    '  90m' '1;90m' '  91m' '1;91m' '  92m' '1;92m' '  93m' '1;93m' \
    '  94m' '1;94m' '  95m' '1;95m' '  96m' '1;96m' '  97m' '1;97m';
    do FG=${FGs// /}
      for BG in \
        40m 41m 42m 43m 44m 45m 46m 47m \
        100m 101m 102m 103m 104m 105m 106m 107m;
          do printf "\033[$BG\033[$FG %5s \033[0m" $FG;
      done
    echo;
  done
} # 16Colors

# }}}
#
#==========================================================================
# {{{ tput 16-Color Codes
# =========================================================================
# resets ------------------------------------------------------------------
NC=$(tput sgr0) # No Color

# Format ------------------------------------------------------------------
DIM=$(tput dim)
BOLD=$(tput bold)
REVERSE=$(tput rev)
UNDERLINE=$(tput smul)

# Colors ------------------------------------------------------------------
BLACK=$(tput setaf 0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
PURPLE=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)

# (Light) Colors ----------------------------------------------------------
# https://retrocomputing.stackexchange.com/questions/20043
BLACK_LIGHT=$(tput setaf 8)
RED_LIGHT=$(tput setaf 9)
GREEN_LIGHT=$(tput setaf 10)
YELLOW_LIGHT=$(tput setaf 11)
BLUE_LIGHT=$(tput setaf 12)
PURPLE_LIGHT=$(tput setaf 13) # MAGENTA
CYAN_LIGHT=$(tput setaf 14)
WHITE_LIGHT=$(tput setaf 15)
MAGENTA=$PURPLE_LIGHT

# Backgrounds -------------------------------------------------------------
BG_BLACK=$(tput setab 0)
BG_RED=$(tput setab 1)
BG_GREEN=$(tput setab 2)
BG_YELLOW=$(tput setab 3)
BG_BLUE=$(tput setab 4)
BG_MAGENTA=$(tput setab 5)
BG_CYAN=$(tput setab 6)
BG_WHITE=$(tput setab 7)

# (Light) Backgrounds -----------------------------------------------------
BG_BLACK_LIGHT=$(tput setab 8)
BG_RED_LIGHT=$(tput setab 9)
BG_GREEN_LIGHT=$(tput setab 10)
BG_YELLOW_LIGHT=$(tput setab 11)
BG_BLUE_LIGHT=$(tput setab 12)
BG_MAGENTA_LIGHT=$(tput setab 13)
BG_CYAN_LIGHT=$(tput setab 14)
BG_WHITE_LIGHT=$(tput setab 15)

# }}}

#==========================================================================
# {{{ 256-Color Codes
#
# 256 ansi colors # Where N is a color code {0-256}
# 38;5;n  │Foreground - Replace ɴ with value from 256-color chart below
#         │for closest supported color (non-GUI TTY has only 16 colors!)
# 48;5;n  │Background - Replace ɴ with value from 256-color chart below
#         │for closest supported color (non-GUI TTY has only 16 colors!)
# =========================================================================
function 256Colors () {
  # https://unix.stackexchange.com/questions/9957/how-to-check-if-bash-can-print-colors
  local bg="\e[48;5;"
  local fg="\e[38;5;"
  local columns=6

  echo && echo ' Standard Colors'
  printf "  #  %-12s  %-12s\n" Foreground Background
  for n in {0..7} ; do
    printf " ${fg}%sm%2d  %-12s\e[0m  ${bg}%sm %-12s\e[0m\n" \
      "$n" "$n" "${fg}${n}m" "$n" "${bg}${n}m"
  done

  echo && echo ' High-Intensity Colors'
  printf "  #  %-12s  %-12s\n" Foreground Background
  for n in {8..15} ; do
    printf " ${fg}%sm%2d  %-12s\e[0m  ${bg}%sm %-12s\e[0m\n" \
      "$n" "$n" "${fg}${n}m" "$n" "${bg}${n}m"
  done

  echo && echo ' (extended) 216 Colors'
  for n in {16..231} ; do
    printf " ${bg}%sm %3d \e[0m" "$n" "$n"
    if (( ( n > 15 ) && (n-15) % $columns == 0 ))
        then printf "\n";
    fi
  done

  echo && echo ' GrayScale Colors'
  for n in {232..255} ; do
    printf " ${bg}%sm %3d \e[0m" "$n" "$n"
    if (( ( n > 15 ) && (n-15) % $columns == 0 ))
        then printf "\n";
    fi
  done
} # 256Colors

# }}}

#==========================================================================
# {{{ 24-Bit True Color
# 38;2;ʀ;ɢ;ʙ │Foreground - Replace ʀ, ɢ, and ʙ with RGB values from 0 to 255
#             for closest supported color (non-GUI TTY has only 16 colors!)
# 48;2;ʀ;ɢ;ʙ │Background - Replace ʀ, ɢ, and ʙ with RGB values from 0 to 255
#             for closest supported color (non-GUI TTY has only 16 colors!)
# =========================================================================
# https://github.com/microsoft/terminal/issues/11057
export COLORTERM='24bit' # [24bit|truecolor|xterm-truecolor]

# Truecolor test
printf "\n\x1b[38;2;255;100;0mTRUECOLOR ${COLORTERM}\x1b[0m\n"

function spectrum () { # https://github.com/JohnMorales/dotfiles/blob/master/colors/24-bit-color.sh
  # https://unix.stackexchange.com/questions/404414/print-true-color-24-bit-test-pattern/404415#404415
  # Truecolor test
  printf "\n\x1b[38;2;255;100;0mTRUECOLOR ${COLORTERM}\x1b[0m\n"

  awk \
    -v term_cols="${width:-$( tput cols || echo 80 )}" \
    -v term_lines="${height:-$( tput lines || echo 1 )}" \
    'BEGIN{
      s="/\\";
      total_cols=term_cols*term_lines;
      for (colnum = 0; colnum<total_cols; colnum++) {
          r = 255-(colnum*255/total_cols);
          g = (colnum*510/total_cols);
          b = (colnum*255/total_cols);
          if (g>255) g = 510-g;
          printf "\033[48;2;%d;%d;%dm", r,g,b;
          printf "\033[38;2;%d;%d;%dm", 255-r,255-g,255-b;
          printf "%s\033[0m", substr(s,colnum%2+1,1);
          if (colnum%term_cols==term_cols) printf "\n";
      }
      printf "\n";
    }' # BEGIN
} # spectrum()

#  }}}

# {{{ Functions
# =========================================================================
function colors () {
  echo && echo "Colors: $( tput colors )"
  printf "\n\$LS_COLORS\n$LS_COLORS\n"
  printf "\ndircolors .dircolors\n$( dircolors "$DIRCOLORS" )\n"
  printf "\ndircolors -b .dircolors\n$( dircolors -b "$DIRCOLORS" )\n"
  echo && dircolors --print-ls-colors
  echo && 16Colors
  echo && 256Colors
  echo && spectrum
  echo
} # colors()

# }}}

echo && echo "I ${REVERSE}${MAGENTA}love${NC} devPunks .colors"
echo

# vim: foldmethod=marker
