############################################################################
#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  <
#  \__|_| |_| |_|\__,_/_/\_\
#    - https://man7.org/linux/man-pages/man1/tmux.1.html
#
#  Author: Ahmid-Ra (github.com/snuggs)
#
#  Plugins:
#    - https://github.com/tmux-plugins

#  Issues:
#    - `property not found` issue - https://github.com/tmux/tmux/issues/1689
#    - special characters for tmux > 3.x - https://github.com/tmux/tmux/issues/1827
#
#  Cheatsheets:
#    - https://devhints.io/tmux
#    - https://tao-of-tmux.readthedocs.io
#    - https://jdhao.github.io/2021/01/25/tmux_cheatsheet
#    - https://www.seanh.cc/2020/12/28/setting-options-in-tmux/
#
#  WIKI:
#    - https://github.com/tmux/tmux/wiki
#    - https://github.com/tmux/tmux/wiki/Advanced-Use
#    - https://github.com/tmux/tmux/wiki/FAQ#how-do-i-translate--fg--bg-and--attr-options-into--style-options
#
#  Shortcuts:
#    <Prefix>   - C-a
#    <Prefix> c - New Window
#    <Prefix> d - Detach
#    <Prefix> f - Find Window
#    <Prefix> i - Info
#    <Prefix> n - Next
#    <Prefix> p - Prev
#    <Prefix> q - Panes
#    <Prefix> s - Sessions
#    <Prefix> t - Time
#    <Prefix> w - Windows
#    <Prefix> z - Zoom
#
############################################################################
# run-shell
#  - https://unix.stackexchange.com/questions/80473/how-do-i-run-a-shell-command-from-tmux-conf
# display-popup
#  popup-style, popup-border-style [rounded|simple|heavy|double], popup-border-lines
#  - https://github.com/tmux/tmux/issues/1842
#  - https://aliquote.org/post/tmux-little-hacks/
#  - https://blog.meain.io/2020/tmux-flating-scratch-terminal/
#  - https://gist.github.com/LintaoAmons/22f6184b26bd5b93d8fe9f9276f50f75

############################################################################
# {{{ Options
#  - https://superuser.com/questions/758843
#  - https://superuser.com/questions/1425921
############################################################################
# {{{ set-option -s(erver) --------------------------------------------------------
%hidden BAR='BAZ'
set -g @pwd $PWD
set -g @os $OSTYPE # TODO: Fix export
set-environment -g DEVPUNKS 😈ROCKS
# display-menu -t 1 -T "devPunks" -x 0 -y 0 "🤘😈🤘hello" z lsp
display-message '#{BAR} #{@os} #{@pwd} #{PREFIX} #{DEVPUNKS}'

set -s editor vi
# https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-FocusIn_FocusOut
set -s focus-events on # for (neo|g)vim - https://github.com/vim/vim/pull/7673
set -s escape-time 50 # https://unix.stackexchange.com/questions/608142
set -s buffer-limit 10
set -s message-limit 100
set -s prompt-history-limit 100
set -s history-file '~/.tmux_history'
# https://man7.org/linux/man-pages/man5/terminfo.5.html
# https://unix.stackexchange.com/questions/1045/getting-256-colors-to-work-in-tmux
set -s default-terminal 'tmux-256color'
# https://github.com/tmux/tmux/wiki/FAQ#how-do-i-use-a-256-colour-terminal
set -as terminal-features ":256:RGB:ccolour:cstyle:ustyle:clipboard:mouse:focus:hyperlinks:strikethrough:sync:title:"
# https://unix.stackexchange.com/questions/568260/how-is-default-terminal-compared-to-tmux-terminal-overrides/568263#568263
set -as terminal-overrides ',*-256color*:RGB:Tc' # See TMUX TERMINFO
# https://github.com/tmux/tmux/issues/2606
# https://github.com/thestinger/termite/pull/85
# https://gist.github.com/EvanPurkhiser/5590068
# https://github.com/tmux/tmux/wiki/FAQ#why-are-tmux-pane-separators-dashed-rather-than-continuous-lines
set -as terminal-overrides ':XT:U8=0' # Focus tracking and UTF8 characters/borders
# https://unix.stackexchange.com/questions/595978
set -as terminal-overrides ':ritm@:sitm@' # Fix nCurses Italic formats
# sane scrolling - https://superuser.com/a/326592
set -as terminal-overrides ':smcup@:rmcup@' # XtermTitle/UP and DOWN arrows

# }}}

# {{{ set-option -g(lobal session) -------------------------------------------------
set-option -g prefix C-a # Reset Prefix to Control + a
set-option -g mode-keys vi   # Use vim keybindings in copy mode
set-option -g xterm-keys on  # for vim
set-option -g status-keys vi # vi movement keys
# holding arrow keys - https://blog.meain.io/2020/tmux-flating-scratch-terminal/
set-option -g repeat-time 1000
# https://stackoverflow.com/questions/18760281
set-option -g history-limit 3000
set-option -g default-shell $SHELL
set-option -g default-command ''
# https://stackoverflow.com/questions/21947123/prevent-tmux-from-displaying-activity-in-window-n
# ittps://unix.stackexchange.com/questions/78093/how-can-i-make-tmux-monitor-a-window-for-inactivity
set-option -g monitor-bell on # [on|off]
set-option -g bell-action any # [any|current|other|none]
set-option -g visual-bell both # [on|off|both]

set-option -g monitor-activity on # [on|off]
set-option -g visual-activity off # [on|off|both]
set-option -g activity-action other # [any|current|other|none]

set-option -g monitor-silence 300 # seconds
set-option -g visual-silence both # [on|off|both]
set-option -g silence-action any  # [any|current|other|none]

# }}}

# {{{ set-window-option -g(lobal) -----------------------------------------------
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
set-window-option -g aggressive-resize on

set-window-option -g mouse on
set-window-option -g base-index 1
set-window-option -g renumber-windows on # when window is closed
set-window-option -g fill-character '😈'
set-window-option -g cursor-colour color11
set-window-option -g allow-passthrough on # escape keys
set-window-option -g clock-mode-style 24
set-window-option -g clock-mode-colour color13
set-window-option -g display-time 2000 # Notificationy display time
# Pane number display (Ctl-b)+q - https://unix.stackexchange.com/questions/307696
set-window-option -g display-panes-time 4000
set-window-option -g mode-style fg=colour13,reverse,bold # selection highlighting/prefix w (window list)
set-window-option -g window-style fg=colour236,dim
set-window-option -g window-active-style fg=green,bg=colour232

set-window-option -g pane-base-index 1
set-window-option -g pane-border-status top
set-window-option -g pane-border-format \
  "＜#[fg=grey,bold]﹟#{pane_index}#[default] #[dim]📂#[italics]…/#(echo '#{pane_current_path}' |
  rev | cut -d'/' -f-3 | rev)/#[default] #[fg=grey,bold]#{pane_current_command} ⤵#[default] ＞"
set-window-option -g pane-border-lines heavy # [single|double|heavy|number]
set-window-option -g pane-border-indicators both # [colour|arrows|both]
set-window-option -g display-panes-colour magenta # prefix q panes list
set-window-option -g display-panes-active-colour brightmagenta # prefix q panes list
set-window-option -g pane-border-style fg=brightblack,bold,bg=terminal
set-window-option -g pane-active-border-style fg=magenta,bold,bg=terminal

# }}}

# }}}

# ############################################################################
# {{{ Unbindings
# ############################################################################
unbind C-b # unbind default leader key
unbind '[' # copy mode bound to escape key
unbind '(' # unbind kill previous session
unbind '"' # unbind horizontal split
unbind '%' # unbind vertical split

# }}}

############################################################################
# {{{ Bindings
#   - List All - <prefix>:?
#   - List Keys - list-keys [-aNT]
#   - https://unix.stackexchange.com/questions/140007/what-are-valid-keys-for-tmux
#   - https://man.openbsd.org/OpenBSD-current/man1/tmux.1#DEFAULT_KEY_BINDINGS
############################################################################
bind-key -N 'Remap <prefix> to "a"' \
  a send-prefix # for nested tmux sessions
bind-key -N 'Send C-a for internal pane capture' \
  C-a send-key C-a # https://stackoverflow.com/questions/9684115

bind-key -N 'Press [Esc] to enter copy-mode' \
  Escape copy-mode # replaces <prefix>+[

bind-key -N 'shortcut (;) to command prompt (like vim)' \
  -n 'C-;' command-prompt

# kill -9
bind-key -N 'Kill current window' \
  C-9 kill-window -t=
bind-key -N 'Kill current window' \
  C-( send -X kill-session

# reload ~/.tmux.conf
bind-key -N 'Reload source file ($HOME/.tmux.conf)' \
  C-r source-file -v ~/.tmux.conf \; display-message "Source file loaded!"

bind-key -N 'Rename Session' \
  R command-prompt -p '#[reverse]RENAME SESSION 💲#[noreverse]' \
  -I "#S" { rename-session '%%' }

# {{{ windows -----------------------------------------------
# Previous Window
bind-key -N 'previous-window' C-up prev
bind-key -N 'previous-window' C-left prev

# Next Window
bind-key -N 'next-window' C-down next
bind-key -N 'next-window' C-right next

bind-key -N 'Rename Window' \
  r command-prompt -p '#[reverse]RENAME WINDOW 💲#[noreverse]' \
  -I "#W" { rename-window '%%' }
bind-key -N 'Rename Window' \
  C-n command-prompt \
  -p '#[reverse]NEW WINDOW 💲#[noreverse]' { new-window -n '%%' }
# Double click on the window list to open a new window
bind-key -N 'New Window (mouuse)' \
  -n DoubleClick1Status command-prompt \
  -p '#[reverse]NEW WINDOW 💲#[noreverse]' { new-window -n '%%' }

#  MOUSE WHEEL TO CHANGE WINDOW TABS - https://wbk.one/%2Farticle%2F15%2Ftmux-mouse-support
# Middle click on the window label to kill it
# bind-key -n MoouseClick2Status display-message "2 mouse click"
# bind-key -n MoouseClick3Status display-message "3 mouse click"
# bind-key -n WheelUp display-message "3 mouse click"

# https://superuser.com/questions/600286/move-pane-to-a-new-window-in-tmux
#  join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
#  [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                 (alias: joinp)
# bind C-j command-prompt "join-pane"
# bind-key j command-prompt "join-pane -s '%%'"
# bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

# }}}

# {{{ layouts -----------------------------------------------
## Drag panes (interchange them)
# Drag to re-order panes
bind-key -N 'swap-pane (with mouse)' \
  -n MouseDrag1Pane swap-pane -dt=
# Drag to re-order windows - https://github.com/tmux/tmux/issues/656#issuecomment-56983404
bind-key -N 'swap-window (with mouse)' \
  -n MouseDrag1Status swap-window -dt=

bind-key -N '' \
  'M-r' rotate-window
bind-key -N 'split-window pane (horizontal)' \
  '\' split-window -h # split pane horizontally
bind-key -N 'split-window pane (vertical)' \
  '-' split-window -v # split pane vertically

# layouts tiled, even-horizontal, even-vertical, main-horizontal, main-vertical
bind-key -N 'split-window pane (vertical)' \
  'C-=' select-layout "tiled"
bind-key -N 'split-window pane (vertical)' \
  'C--' select-layout "even-vertical"
bind-key -N 'split-window pane (vertical)' \
  'C-\' select-layout "even-horizontal"

# }}}

# {{{ panes -----------------------------------------------
# Kill
bind-key -N 'Kill current pane' 9 kill-pane

# use the vim motion keys to move between panes
bind-key -N 'select-pane UP'    k select-pane -U
bind-key -N 'select-pane DOWN'  j select-pane -D
bind-key -N 'select-pane LEFT'  h select-pane -L
bind-key -N 'select-pane RIGHT' l select-pane -R

# }}}

# {{{ resizing -----------------------------------------------
# ZOOM: toggle
bind-key -N 'Press [Enter] for (-Z)oom toggle' \
  Enter resize-pane -Z # Zoom with [Enter]

bind-key -N 'resize-pane Up'    C-k resize-pane -U 7
bind-key -N 'resize-pane Down'  C-j resize-pane -D 7
bind-key -N 'resize-pane Left'  C-h resize-pane -L 7
bind-key -N 'resize-pane Right' C-l resize-pane -R 7

# }}}

# }}}

############################################################################
# {{{ Status Bar
#   - https://tao-of-tmux.readthedocs.io/en/latest/manuscript/09-status-bar.html
#   Formats:
#     - https://github.com/tmux/tmux/wiki/Formats
############################################################################
set-window-option -g status-interval 1
set-window-option -g status-justify left # [left|(absolute-)centre|right]
set-window-option -g status-position bottom # [top|bottom]

set-window-option -g message-line 4 # row position (0-5)
set-window-option -g message-style fg=brightmagenta,bold,bg=colour234
set-window-option -g message-command-style fg=brightmagenta,dim,italics,bg=colour234

# Titles (window number, program name, active (or not)
#  printf '\033]2;title\007' # PRINTS TITLE TO HEADER
#  - https://unix.stackexchange.com/questions/60968/tmux-bottom-bar-color-change/60969
#  - https://stackoverflow.com/questions/16624752/tmux-how-to-configure-tmux-to-display-the-current-working-directory-of-a-pane-o
set-window-option -g set-titles on
set-window-option -g set-titles-string "#{?session_name,#{session_name},#H}"

# Multiple Status Lines
set-window-option -g status 5 # lines (on|0-5|off)
set-window-option -g status-bg colour234
set-window-option -g status-fg magenta
# set-window-option -g status-format[0] '* Window tabs *' # 0th line
set-window-option -g status-format[1] \
  "PWD⚓ #[bold,italics]#{pane_current_path}/#[default]"
set-window-option -g status-format[2] \
  "#[bold]#{window_active_clients}#[nobold] VIEWER(S)👥 👤#[bold]#{user}#[nobold] 💻#{W:#{window_active_clients_list}}"
set-window-option -g status-format[3] \
  "SOCKET🔌 #[dim,underscore] #{=|-32|…:socket_path} #[default] "
set-window-option -g status-format[4] \
  "#[bg=colour234]UPTIME🏁 #[bold]#{@os}#[dim]#[italics]TMUX - #{t:start_time}#[noitalics] #( uptime )#[default]"

# https://superuser.com/questions/1708413/how-to-automatically-rename-tmux-window-to-an-aliased-command
set-window-option -g automatic-rename on # Automatically set window title
# Use PROMPT_COMMANND to prevent lag - https://that.guru/blog/automatically-set-tmux-window-name
set-window-option -g automatic-rename-format \
  "#{?window_name,#{window_name},Window ﹟#{window_index}}"
set-window-option -g window-status-separator '|'
set-window-option -g window-status-format \
  "#{?window_silence_flag,💤,}#{?window_activity_flag,📣,}#{?window_bell_flag,🔕,}"
set-window-option -ag window-status-format \
  "#[fg=grey,nobold,noreverse]#{?window_name, #{window_name}, ﹟#{window_index}} #{?window_zoomed_flag,🔎,▥#{window_panes}} #[default]"
set-window-option -g window-status-current-format "#[reverse,bold] #{?window_bell_flag,🔔,👓}"
set-window-option -ag window-status-current-format \
  "#{?window_name, #{window_name}, ﹟#{window_index}} #{?window_zoomed_flag,🔎,▥#{window_panes}} #[default]"

# Window tab notification styles (overriden by *-format)
#set-window-option -g window-status-bell-style fg=blue,bg=red
# set-window-option -g window-status-activity-style fg=magenta,bold

set-window-option -g status-style fg=red,bg=blue

set-window-option -g status-left-length 26
set-window-option -g status-left-style fg=default,bg=default
set-window-option -g status-left \
  "#{?session_name,#{=|16|…;p17:session_name},#H}"
set-window-option -ag status-left \
  "|#{?client_prefix,#[bg=white#,bold#,reverse],#[dim]} #( tmux show -gv prefix | sed 's/C-/\^/' ) #[default]"
set-window-option -ag status-left \
  "#{?pane_in_mode,#[reverse#,bold]|📜|#[default],|  |}"
set-window-option -g status-right-length 32
set-window-option -g status-right-style fg=default,bg=default
set-window-option -g status-right '|#{client_width}✖#{client_height}|'
set-window-option -ag status-right "#[reverse] 🕛 %H:%M #[italics]%a. %b. %d #[default]"

# }}}

##############################################################################
# {{{ Copy & Pasta
# - https://github.com/tmux/tmux/wiki/Clipboard
# - https://en.m.wikipedia.org/wiki/Clipboard_(computing)
# - $$$$$$ https://news.ycombinator.com/item?id=23004062
# - https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
# - http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
#
# Testing for Darwin (Mac OSX):
#  if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l zsh"'
##############################################################################
bind-key -N "`v` to begin selection" \
  copy-mode-vi v send-keys -X begin-selection

bind-key -N "`C-v` to begin visual block rectangle selection" \
  copy-mode-vi C-v send-keys -X begin-selection

# bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace termux-clipboard-set"
# copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -N "`y` to copy selection and exit" \
  copy-mode-vi y send-keys -X copy-pipe-and-cancel " copy-selection-and-cancel

# Update default binding of [Enter] to also use copy-pipe
# bind-key -T copy-mode-vi Enter copy-pipe "reattach-to-user-namespace pbcopy"\; send X copy-pipe-and-cancel\;
# [Enter] to copy and close copy-mode
unbind copy-mode-vi Enter
bind-key -N "[Enter] to copy selection and exit" copy-mode-vi \
  Enter send-keys -X copy-pipe-and-cancel " copy-selection-and-cancel

# bind -T copy-mode-vi M-y send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"

# Clipboard integration
# https://www.freecodecamp.org/news/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b/
# ctrl+c to send to clipboard
# bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# ctrl+v to paste from clipboard
# ind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
# paste from right click
# unbind-key MouseDown3Pane
# ind-key -n MouseDown3Pane run " \
#   X=$(xclip -o -sel clipboard); \
#   tmux paste-buffer -p; Mouse\
#   tmux set-buffer \"$X\"; \
#   tmux paste-buffer -p; Mouse\
#   tmux display-message 'pasted!' \
#   tmux diplay-message 'DEVPUNKS' \

# Selection with mouse should copy to clipboard right away, in addition to the default action.
# #unbind -n -T copy-mode-vi MouseDragEnd1Pane
# #bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel clipboard > /dev/null"
# bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel
#
#
# Clipboard integration (only applicable when you have an X server running)
#
# Selection with mouse should copy to clipboard right away, in addition to the default action.
# Unbind the default action first.
# unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
# bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run &quot;tmux save-buffer - | xclip -i -sel clipboard &gt; /dev/null&quot;
# Copy mode copy should also copy it to the clipboard as well.
# unbind -Tcopy-mode-vi Enter
# bind -Tcopy-mode-vi Enter send -X copy-selection-and-cancel\; run &quot;tmux save-buffer - | xclip -i -sel clipboard &gt; /dev/null&quot;
# Right click to paste from the clipboard
# If you like middle click better, change MouseDown3Pane to MouseDown2Pane for middle click.
# unbind-key MouseDown3Pane
# bind-key -n MouseDown3Pane run &quot;tmux set-buffer \&quot;$(xclip -o -sel clipboard)\&quot;; tmux p
#
# }}}

# {{{ DOUBLE CLICK To OPEN
# set -g word-separators ""
# bind -n C-DoubleClick1Pane if -F '#{m/r:^[^:]*:[0-9]+:,#{mouse_word}}' {
#         run -C { popup -w90% -h90% -E -d '#{pane_current_path}' '
#                 emacs `echo #{mouse_word}|awk -F: "{print \"+\"\\$2,\\$1}"`
#         ' }
# } {
#         run -C { popup -w90% -h90% -E -d '#{pane_current_path}' '
#                 emacs "#{mouse_word}"
#         ' }
# }
# }}}

#############################################################################&
# {{{  Hooks
#############################################################################&
set-hook -g alert-activity {
  display -d1000 ' 📣 Activity in other window'
}
set-hook -g alert-bell { # https://unix.stackexchange.com/questions/448649
    display -d1000 ' 🔔 Ding Dong'
    set status-left-style bg=white
    run-shell "sleep 1s"
    run -b -d.1 -C {
        set -u status-left-style
    }
}
set-hook -g alert-silence {
  display -d1000 ' 💤 Window #N is Sleeping'
}
set-hook -g pane-focus-in {
  if -F '#{==:#{window_zoomed_flag},1}' { set status on }{ set -u status }
  display -d 1000 "Pane focus in"
}
set-hook -g pane-focus-out { }

set-hook -g after-resize-pane {
  if -F '#{==:#{window_zoomed_flag},1}' { set status on }{ set -u status }
  display -d 1000 "Resized pane changed"
}
set-hook -g session-window-changed {
  if -F '#{==:#{window_zoomed_flag},1}' { set status on }{ set -u status }
  display -d 1000 "Session Window changed"
}

# }}}
