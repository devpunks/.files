#
#      888                                                                   .d888
#      888                                                                  d88P"
#      888                                                                  888
#      888888 88888b.d88b.  888  888 888  888      .d8888b .d88b.  88888b.  888888
#      888    888 "888 "88b 888  888 `Y8bd8P'     d88P"   d88""88b 888 "88b 888
#      888    888  888  888 888  888   X88K       888     888  888 888  888 888
#  d8b Y88b.  888  888  888 Y88b 888 .d8""8b. d8b Y88b.   Y88..88P 888  888 888
#  Y8P  "Y888 888  888  888  "Y88888 888  888 Y8P  "Y8888P "Y88P"  888  888 888
#
# -------------------------------------------------------------------------
# Version: 0.1
# File: .tmux.conf
# Source: https://github.com/devpunks
# Author: Ahmid-Ra (github.com/snuggs)
# Maintainer: devPunks <https://github.com/devpunks>
# Description: Terminal MUltipleXer configuration dotfile
# -------------------------------------------------------------------------
#
#    - https://man7.org/linux/man-pages/man1/tmux.1.html
#
#  Author: devPunks (github.com/devpunks)
#
#  Plugins:
#    - https://github.com/tmux-plugins

#  Issues:
#    - special characters > 3.x - https://github.com/tmux/tmux/issues/1827
#    - `property not found` issue - https://github.com/tmux/tmux/issues/1689
#
#  Cheatsheets:
#    - https://devhints.io/tmux
#    - https://tao-of-tmux.readthedocs.io
#    - https://github.com/tmux/tmux/wiki/Control-Mode
#    - https://jdhao.github.io/2021/01/25/tmux_cheatsheet
#    - https://www.seanh.cc/2020/12/28/setting-options-in-tmux/
#
#  WIKI:
#    - https://github.com/tmux/tmux/wiki
#    - https://github.com/tmux/tmux/wiki/Advanced-Use
#    - https://github.com/tmux/tmux/wiki/FAQ#how-do-i-translate--fg--bg-and--attr-options-into--style-options
#
#  Shortcuts:
#    <Prefix>   - C-a
#    <Prefix> c - New Window
#    <Prefix> d - Detach
#    <Prefix> f - Find Window
#    <Prefix> i - Info
#    <Prefix> n - Next
#    <Prefix> p - Prev
#    <Prefix> q - Panes
#    <Prefix> s - Sessions
#    <Prefix> t - Time
#    <Prefix> w - Windows
#    <Prefix> z - Zoom
#
# run-shell
#  - https://unix.stackexchange.com/questions/80473/how-do-i-run-a-shell-command-from-tmux-conf
# display-popup
#  popup-style, popup-border-style [rounded|simple|heavy|double], popup-border-lines
#  - https://github.com/tmux/tmux/issues/1842
#  - https://aliquote.org/post/tmux-little-hacks/
#  - https://blog.meain.io/2020/tmux-flating-scratch-terminal/
#  - https://gist.github.com/LintaoAmons/22f6184b26bd5b93d8fe9f9276f50f75

#==========================================================================
# {{{ Options
#  - https://superuser.com/questions/758843
#  - https://superuser.com/questions/1425921
#=========================================================================
# {{{ set-option -s(erver) -----------------------------------------------
%hidden BAR='BAZ'
set -g @pwd $PWD
set -g @os $OSTYPE # TODO: Fix export
set-environment -g DEVPUNKS 😈ROCKS

set -s editor vi
# https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-FocusIn_FocusOut
set -s focus-events on # (neo|g)vim - https://github.com/vim/vim/pull/7673
set -s escape-time 50 # https://unix.stackexchange.com/questions/608142
set -s buffer-limit 10
set -s message-limit 100
set -s prompt-history-limit 100
set -s history-file '~/.tmux_history'

# https://unix.stackexchange.com/questions/568260
# https://unix.stackexchange.com/questions/1045/getting-256-colors-to-work-in-tmux
set -s default-terminal 'tmux-256color'

# https://man7.org/linux/man-pages/man5/terminfo.5.html
set -u terminal-features #  # UNSET See terminfo(5)
set -as terminal-features \
  ":hyperlinks:mouse:sync:clipboard:title:"
# https://github.com/tmux/tmux/wiki/FAQ#how-do-i-use-a-256-colour-terminal
set -as terminal-features \
  ":256:RGB:ccolour:cstyle:ustyle:strikethrough"

# https://linux.die.net/man/1/infocmp
# https://pubs.opengroup.org/onlinepubs/7908799/xcurses/terminfo.html
set -u terminal-overrides # UNSET See infocmp(1)
set -as terminal-overrides ',*-256color*:RGB:Tc'
set -as terminal-overrides ',*:Ms' # Send to host terminal clipboard

# https://github.com/tmux/tmux/issues/2606
set -as terminal-overrides ',*:XT' # XtermTitle sequences
# https://github.com/tmux/tmux/wiki/FAQ#why-are-tmux-pane-separators-dashed-rather-than-continuous-lines
set -as terminal-overrides ',*:U8=0' # Focus tracking and UTF8 characters/borders
# https://unix.stackexchange.com/questions/595978
# set -as terminal-overrides ',*:sitm@:ritm@' # Fix nCurses Italic formats
set -as terminal-overrides ',*:sitm=[3m:ritm=[0m'
# sane scrolling - https://superuser.com/a/326592
set -as terminal-overrides ',*:smcup@:rmcup@' # UP and DOWN arrows

# Hyperlink (OSC8) Support
#  - https://github.com/tmux/tmux/pull/3240
#  - https://github.com/tmux/tmux/pull/2890
#  - https://github.com/tmux/tmux/issues/911
#  - https://github.com/Alhadis/OSC8-Adoption/
#  - https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda
#  - https://github.com/tmux/tmux/commit/cdacc12ce305ad2f3e65e2a01328a988e3200b51
set -sa terminal-overrides ',*:Hls=\033]8;id=%p1%s;%p2%s\033\\:Hlr=\033]8;;\033\\'
set -sa terminal-overrides ',*:Hla=\033]8;;%p1%s\033\\:Hlr=\033]8;;\033\\'

# }}}

# {{{ set-option -g(lobal session) ----------------------------------------
set-option -g prefix C-a # Reset Prefix to Control + a
set-option -g mode-keys vi   # Use vim keybindings in copy mode
set-option -g xterm-keys on  # for vim
set-option -g status-keys vi # vi movement keys
# holding arrow keys - https://blog.meain.io/2020/tmux-flating-scratch-terminal/
set-option -g repeat-time 1000
# https://stackoverflow.com/questions/18760281
set-option -g history-limit 3000
set-option -g default-shell $SHELL
set-option -g default-command '' # 'echo "devPunks IDE"'
# https://stackoverflow.com/questions/21947123/prevent-tmux-from-displaying-activity-in-window-n
# ittps://unix.stackexchange.com/questions/78093/how-can-i-make-tmux-monitor-a-window-for-inactivity
set-option -g monitor-bell on # [on|off]
set-option -g bell-action any # [any|current|other|none]
set-option -g visual-bell on # [on|off|both]

set-option -g monitor-activity on # [on|off]
set-option -g visual-activity both # [on|off|both]
set-option -g activity-action other # [any|current|other|none]

set-option -g monitor-silence 300 # seconds
set-option -g visual-silence both # [on|off|both]
set-option -g silence-action any  # [any|current|other|none]

# }}}

# {{{ set-window-option -g(lobal) -----------------------------------------
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
set-window-option -g aggressive-resize on

set-window-option -g mouse on
set-window-option -g base-index 1
set-window-option -g fill-character '😈'
set-window-option -g cursor-colour color13
set-window-option -g renumber-windows on # when window is closed
set-window-option -g allow-passthrough all # escape keys [on|off|all]
set-window-option -g clock-mode-style 24
set-window-option -g clock-mode-colour color13
set-window-option -g display-time 2000 # Notificationy display time
# Pane number display (Ctl-b)+q - https://unix.stackexchange.com/questions/307696
set-window-option -g display-panes-time 4000
set-window-option -g mode-style fg=colour13,reverse,bold # selection highlighting/prefix w (window list)
set-window-option -g window-style fg=colour236,dim
set-window-option -g window-active-style fg=green,bg=colour232

set-window-option -g pane-base-index 1
set-window-option -g pane-border-status top
set-window-option -g pane-border-format \
  "＜#{pane_mode}#[fg=grey,bold]﹟#{pane_index}#[default]"
set-window-option -ag pane-border-format \
  "🔌#[dim,underscore]#{pane_tty}#[nounderscore]💻#{pane_width}ˣ#{pane_height}#[default] "
set-window-option -ag pane-border-format \
  "#[reverse]📂#[italics]⋯/#( echo '#{pane_current_path}' | rev | cut -d'/' -f-3 | rev )/#[default] "
set-window-option -ag pane-border-format \
  "#[fg=grey,bold]#{pane_current_command} ⤵#[default] ＞"
set-window-option -g pane-border-lines heavy # [single|double|heavy|number]
set-window-option -g pane-border-indicators both # [colour|arrows|both]
set-window-option -g display-panes-colour color5 # prefix q panes list
set-window-option -g display-panes-active-colour color13 # prefix q panes list
set-window-option -g pane-border-style fg=brightblack,bold,bg=terminal
set-window-option -g pane-active-border-style fg=magenta,bold,bg=terminal

# }}}

# }}}

#==========================================================================
# {{{ Status Bar
#   - https://tao-of-tmux.readthedocs.io/en/latest/manuscript/09-status-bar.html
#   Formats:
#     - https://github.com/tmux/tmux/wiki/Formats
#==========================================================================
set-window-option -g status-interval 1
set-window-option -g status-justify left # [left|(absolute-)centre|right]
set-window-option -g status-position bottom # [top|bottom]

set-window-option -g message-line 0 # row position (0-4)
set-window-option -g message-style fg=brightmagenta,bold,bg=colour234
set-window-option -g message-command-style fg=brightmagenta,dim,italics,bg=colour234

# Titles (window number, program name, active (or not)
#  printf '\033]2;title\007' # PRINTS TITLE TO HEADER
#  - https://unix.stackexchange.com/questions/60968/tmux-bottom-bar-color-change/60969
#  - https://stackoverflow.com/questions/16624752/tmux-how-to-configure-tmux-to-display-the-current-working-directory-of-a-pane-o
set-window-option -g set-titles on
set-window-option -g set-titles-string "#{?session_name,#{session_name},#H}"

# Multiple Status Lines
set-window-option -g status 5 # lines (on|0-5|off)
set-window-option -g status-bg colour234
set-window-option -g status-fg magenta
# set-window-option -g status-format[0] '* Window tabs *' # 0th line
set-window-option -g status-format[1] \
  "PWD⚓#[bold,italics]#{pane_current_path}/#[default] ★☆📧Message❗❔✓✔☑✅888 Pass ✘❌888 Fail ▲▼🔺🔻⬜⬛⚪⚫🔵🔴⭕🛑🚨⚠☡☠✂☢♲🥡📦Bundle" # https://symbl.cc/en/
set-window-option -g status-format[2] \
  "#[bold]#{window_active_clients}#[nobold] VIEWER(S)👥 〚 👤#[bold]#{user}#[nobold] 〛 💻#{W:#{window_active_clients_list}}"

set-window-option -g status-format[3] \
  "PID🆔#[dim]#{pid}#[nodim] "

set-window-option -ag status-format[3] \
  "SOCKET🔌#[dim,underscore]#{=|-32|⋯:socket_path} #[default] "

set-window-option -ag status-format[3] \
  "TICKER📊#[fg=red,bold,reverse] #{TOKEN} $#{PRICE} #[default] "

set-window-option -g status-format[4] \
  "#[bg=colour234]UPTIME🏁#[bold]➤TMUX#[nobold]#[dim,italics] #{t:start_time}#[default]  #[bold]➤#( uname -o ) #( uname -s )#[default]#[dim,italics]#( uptime )#[default]"

# https://superuser.com/questions/1708413/how-to-automatically-rename-tmux-window-to-an-aliased-command
set-window-option -g automatic-rename on # Automatically set window title
# Use PROMPT_COMMANND to prevent lag - https://that.guru/blog/automatically-set-tmux-window-name
set-window-option -g automatic-rename-format \
  "#{?window_name,#{window_name},Window ﹟#{window_index}}"
set-window-option -g window-status-separator '|'
set-window-option -g window-status-format \
  "#[nobold,noreverse]\ #{?window_silence_flag,💤,}#{?window_activity_flag,📣,}#{?#{window_bell_flag},🔔,}"
set-window-option -ag window-status-format \
  " #{?window_name,#{window_name},﹟#{window_index}} #{?window_zoomed_flag,🔎,⊞#{window_panes}} #[default]"
set-window-option -g window-status-current-format "#[reverse,bold] #{?#{window_bell_flag},🔔,👓}"
set-window-option -ag window-status-current-format \
  "#{?window_name, #{window_name}, ﹟#{window_index}} #{?window_zoomed_flag,🔎,⊞#{window_panes}} #[default]"

set-window-option -g status-left-length 36
set-window-option -g status-left \
  "#[fg=default#,bold] #{?session_name,#{=|16|…;p17:session_name},#H}#[default]"
set-window-option -ag status-left \
  "|#[fg=default,dim] #{client_width}✖#{client_height} #[default]"
set-window-option -ag status-left \
  "|#{?client_prefix,#[bg=white#,bold#,reverse],#[dim]} #( tmux show -gv prefix | sed 's/C-/\^/' ) #[default]"

# TODO: #{?pane_mode,,}
# TODO: #{?rectangle_toggle,,}
# TODO: #{?search_present,,}
# TODO: #{?selection_active,,}
set-window-option -ag status-left \
  "#{?pane_in_mode,#[reverse#,bold]|📜|#[default],|  |}"

set-window-option -g status-right-length 47
set-window-option -g status-right \
  "#[reverse] 🕛 %H:%M #[italics]%a. %b. %d #[default]"
set-window-option -ag status-right \
  "#[fg=red,bold,reverse] #{TOKEN} $#{PRICE} #[default]"

# Window tab notification styles (overriden by *-format)
# set-window-option -g status-style fg=default
# set-window-option -g status-left-style fg=default
# set-window-option -g status-right-style fg=default
# set-window-option -g window-status-bell-style fg=default
# set-window-option -g window-status-activity-style fg=default

# }}}

#==========================================================================
# {{{ Unbindings
# #########################################################################
unbind C-b # unbind default leader key
unbind '[' # copy mode bound to escape key
unbind '(' # unbind kill previous session
unbind '"' # unbind horizontal split
unbind '%' # unbind vertical split

# }}}

###########################################################################
# {{{ Copy & 🍝Pasta
#   - https://man.openbsd.org/tmux.1#BUFFERS
#   - https://waylonwalker.com/tmux-copy-mode
#   - https://wiki.archlinux.org/title/Clipboard
#   - https://github.com/tmux/tmux/wiki/Clipboard
#   - https://en.m.wikipedia.org/wiki/Clipboard_(computing)
#   - https://askubuntu.com/questions/705620/xclip-vs-xsel
#   - https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
#   - http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
#   - https://cyberciti.biz/faq/xclip-linux-insert-files-command-output-intoclipboard/
#   - https://rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting/
#   - https://freecodecamp.org/news/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b/
#
#   - X11 Forwarding to remote server
#     - printf "\033]52;c;Y29weXBhc3RhIQ==\a\n" # copypasta! OC2 sequence
#     - https://askubuntu.com/a/305681
#     - https://stackoverflow.com/questions/1152362
#     - https://sunaku.github.io/tmux-yank-osc52.html
#     - https://unix.stackexchange.com/questions/56477
#     - https://unix.stackexchange.com/questions/572874
#     - https://chromium.googlesource.com/apps/libapps/+/master/nassh/doc/FAQ.md#Is-OSC-52-aka-clipboard-operations_supported
#
# Testing for Darwin (Mac OSX):
#  if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "echo default"'
###########################################################################
set set-clipboard on # [on|external]

bind-key -N '[Escape] entering copy-mode' \
  Escape copy-mode # replaces <prefix>+[ \; \
  display-message '[Escape] entering copy-mode'

bind-key -n -N 'Mouse double click 1 copy-mode' \
  -T copy-mode DoubleClick1Pane \; \
  display-message 'Mouse double click 1 copy-mode'

# bind-key -N 'ctrl+c to send to clipboard' \
#   'C-c' run "tmux save-buffer - | xclip -i -selection clipboard"

unbind -T copy-mode-vi v
bind-key -n -N '(v)isual copy-mode selection' \
  -T copy-mode-vi v send-keys -X begin-selection \; \
  display-message '(v)isual copy-mode selection'

unbind -T copy-mode-vi V
bind-key -n -N '(S-v)isual line copy-mode selection' \
  -T copy-mode-vi V send-keys -X begin-selection \; \
  display-message '(S-v)isual line copy-mode selection'

unbind -T copy-mode-vi C-v
bind-key -n -N '(C-v)isual rectancle block copy-mode selection' \
  -T copy-mode-vi C-v send-keys -X begin-selection \; \
  send-keys -X rectangle-toggle \; \
  display-message '(C-v)isual rectancle block copy-mode selection'

# bind-key -N "ctrl+v to paste from clipboard" \
#   'C-v' run "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

unbind -T copy-mode y
bind-key -N "`y` to copy pipe selection and exit" \
  -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
# bind-key -N "" \
#   -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace termux-clipboard-set"
# copy-pipe "reattach-to-user-namespace pbcopy"

unbind -T copy-mode Enter
bind-key -N "[Enter] to copy pipe selection and exit" \
  -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "tmux list-buffers" # "pbcopy"

# bind-key -N "" \
#   -T copy-mode-vi Enter copy-pipe "reattach-to-user-namespace pbcopy"\; send X copy-pipe-and-cancel\;

# Copy mode copy should also copy it to the clipboard as well.
# bind -N "" \
#   -T copy-mode-vi Enter send -X copy-selection-and-cancel\; run &quot;tmux save-buffer - | xclip -i -selection clipboard &gt; /dev/null&quot;

# paste from right click
# bind-key -N "" -n MouseDown3Pane run " \
#   X=$(xclip -o -selection clipboard); \
#   tmux paste-buffer -p; Mouse\
#   tmux set-buffer \"$X\"; \
#   tmux paste-buffer -p; Mouse\
#   tmux display-message 'pasted!' \
#   tmux diplay-message 'DEVPUNKS'

# System clipboard integration (only applicable when you have an X server running)
# bind -N "" \
#   -T copy-mode-vi 'M-y' send -X copy-pipe "xclip -i -selection p -f | xclip -i -selection c" \; display-message "copied to system clipboard"

#  Mouse selection copy to clipboard right away, in addition to the default action.
# bind -N "" \
#   -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run &quot;tmux save-buffer - | xclip -i -selection clipboard &gt; /dev/null&quot;

# Right click to paste from the clipboard
# Change MouseDown3Pane to MouseDown2Pane for middle click.
# bind-key -n MouseDown3Pane \
#   run &quot;tmux set-buffer \&quot;$(xclip -o -selection clipboard)\&quot;; tmux p

# }}}

###########################################################################
# {{{ Bindings
#   - List All - <prefix>:?
#   - List Keys - list-keys [-aNT]
#   - https://unix.stackexchange.com/questions/140007/what-are-valid-keys-for-tmux
#   - https://man.openbsd.org/OpenBSD-current/man1/tmux.1#DEFAULT_KEY_BINDINGS
###########################################################################
bind-key -N 'Remap <prefix> to "a"' \
  a send-prefix # for nested tmux sessions
bind-key -N 'Send C-a for internal pane capture' \
  C-a send-key C-a # https://stackoverflow.com/questions/9684115
bind-key -N 'Shortcut (;) to command prompt (like vim)' \
  ';' command-prompt

# Kill
bind-key -N 'Kill current pane'      9 kill-pane
bind-key -N 'Kill current window'  C-9 kill-window -t=
bind-key -N 'Kill current session' C-( send -X kill-session

# reload ~/.tmux.conf
bind-key -N 'Reload source file ($HOME/.tmux.conf)' \
  C-r source-file -v ~/.tmux.conf \; \
  display-message 'Source file loaded!'

bind-key -N 'Rename Session' \
  R command-prompt -p '#[reverse] RENAME SESSION 💲#[noreverse]' \
  -I "#S" { rename-session '%%' }

bind-key -N "Status MouseDown l" \
  -n MouseDown1Status \
  display-message "Status MouseDown l >>  #{mouse_status_line}"

bind-key -N "StatusRight MouseDown l" \
  -n MouseDown1StatusRight \
  display-message "StatusRight MouseDown l"
bind-key -N "StatusRight DoubleClick l" \
  -n DoubleClick1StatusRight \
  display-message "StatusRight DoubleClick l"
bind-key -N "StatusRight TripleClick l" \
  -n TripleClick1StatusRight \
  display-message "StatusRight TripleClick l"

bind-key -N "StatusLeft MouseDown l" \
  -n MouseDown1StatusLeft \
  display-message "StatusLeft MouseDown l Click"
bind-key -N "StatusLeft DoubleClick l" \
  -n DoubleClick1StatusLeft \
  display-message "StatusLeft DoubleClick l"
bind-key -N "StatusLeft TripleClick l" \
  -n TripleClick1StatusLeft \
  display-message "StatusLeft TripleClick l"

# {{{ panes ---------------------------------------------------------------
bind-key -N 'Press [Enter] for (-Z)oom toggle' \
  Enter resize-pane -Z
bind-key -n -N 'Double Click 1 Pane' DoubleClick1Pane \; display-message 'DoubleClick 1 Pane'

# vim motion
bind-key -r -N 'Select pane UP'    k select-pane -U
bind-key -r -N 'Select pane DOWN'  j select-pane -D
bind-key -r -N 'Select pane LEFT'  h select-pane -L
bind-key -r -N 'Select pane RIGHT' l select-pane -R

# resizing
bind-key -r -N 'Resize pane Up'    C-k resize-pane -U 7
bind-key -r -N 'Resize pane Down'  C-j resize-pane -D 7
bind-key -r -N 'Resize pane Left'  C-h resize-pane -L 7
bind-key -r -N 'Resize pane Right' C-l resize-pane -R 7

# }}}

# {{{ layouts -------------------------------------------------------------
# bind-key -N 'Drag swap-pane order with mouse' \
#   -n MouseDrag1Pane swap-pane -Z -dt=
# Drag to re-order windows - https://github.com/tmux/tmux/issues/656#issuecomment-56983404
# bind-key -N 'Drag swap-window order with mouse' \
#   -n MouseDrag1Status swap-window -dt=

bind-key -N 'Rotate window' -r 'M-r' rotate-window
bind-key -N 'Split window pane (vertical)' \
  '-' command-prompt -p '#[reverse] PATH #[noreverse] 📁' \
    -I '#{pane_current_path}' {
        display-message '%%'
        split-window -v
        # TODO: don't sleep 😴
        run-shell "sleep 2s"
        send-keys 'export OLDPWD=%% && cd -' Enter
      }
bind-key -N 'Split window pane (horizontal)' \
  '\' command-prompt -p '#[reverse] PATH 📁#[noreverse]' \
    -I '#{pane_current_path}' {
        display-message '%%'
        split-window -h
        # TODO: don't sleep 😴
        run-shell "sleep 2s"
        send-keys 'export OLDPWD=%% && cd -' Enter
      }
bind-key -N 'Split window pane (horizontal)' \
  '|' command-prompt -p '#[reverse] PATH 📁#[noreverse]' \
    -I '#{pane_current_path}' {
        display-message '%%'
        split-window -h
        # TODO: don't sleep 😴
        run-shell "sleep 2s"
        send-keys 'export OLDPWD=%% && cd -' Enter
      }

# layouts tiled, even-horizontal, even-vertical, main-horizontal, main-vertical
bind-key -N 'Select Layout (tiled)' \
  'C-=' select-layout 'tiled'
bind-key -N 'Select Layout (even-vertical)' \
  'C--' select-layout 'even-vertical'
bind-key -N 'Select Layout (even-horizontal)' \
  'C-\' select-layout 'even-horizontal'

# }}}

# {{{ windows -------------------------------------------------------------
bind-key -N 'Next Window' C-down next
bind-key -N 'Next Window' C-right next

bind-key -N 'Previous Window' C-up prev
bind-key -N 'Previous Window' C-left prev

bind-key -N 'Rename Window' \
  r command-prompt -p '#[reverse] RENAME WINDOW 💲#[noreverse]' \
  -I "#W" { rename-window '%%' }

bind-key -N 'New Window' \
  C-n command-prompt -T 'target' \
  -p '#[reverse] NEW WINDOW 💲#[noreverse],#[reverse] PATH #[noreverse] 📁' \
  -I ',#{pane_current_path}' \
  {
     display-message '%1 @ %2'
     new-window -n '%1'
     # TODO: don't sleep 😴
     run-shell "sleep 2s"
     send-keys 'export OLDPWD=%2 && cd -' Enter
  }
# Double click on the window list to open a new window
# bind-key -N 'New Window (mouse)' \
#   -n DoubleClick1Status command-prompt \
#   -p '#[reverse] NEW WINDOW 💲#[noreverse]' { new-window -n '%%' }

#  MOUSE WHEEL TO CHANGE WINDOW TABS - https://wbk.one/%2Farticle%2F15%2Ftmux-mouse-support
# bind-key -n -N 'Wheel up scroll' WheelUp \;  display-message 'Wheel scroll up'
# bind-key -n -N 'Wheel down scroll' WheelDown \; display-message 'Wheel scroll down'
# bind-key -n -N 'Mouse click 2' MouseClick2Status \; display-message 'mouse 2 click'
# bind-key -n -N 'Mouse click 3' MouseClick3Status \; display-message 'mouse 3 click'

# }}}

# }}}

###########################################################################
# {{{  Hooks
###########################################################################
set-hook -g session-created {
  display -d1000 ' Session Created'
}

set-hook -g client-attached {
  display-message -d1000 '#{BAR} #{@os} #{@pwd} #{PREFIX} #{DEVPUNKS}'
  display -d1000 ' Client Attached'
  display-menu -t 1 -T "devPunks😈crypto: Select Token" -x 0 -y 0 "🤘😈🤘 BTC" z lsp
}

set-hook -g pane-set-clipboard {
  display -d1000 ' 📋 Copied to clipboard'
}

set-hook -g alert-activity {
  display -d1000 ' 📣 Activity #{window_id}|#{hook_window_name}|#{hook_pane}'
}
set-hook -g alert-bell { # https://unix.stackexchange.com/questions/448649
  display -d1000 ' 🔔 Ding Dong #{window_id}|#{hook_window_name}|#{hook_pane}'
  set status-left-style bg=white
  # TODO: don't sleep 😴
  run-shell "sleep 1s"
  run -b -d.1 -C {
    set -u status-left-style
  }
}
set-hook -g alert-silence {
  display -d1000 ' #{window_id}|#{hook_window_name}|#{hook_pane} is Sleeping 💤'
}
set-hook -g pane-focus-in {
  if -F '#{==:#{window_zoomed_flag},1}' { set status on }{ set -u status }
  display -d 1000 "Pane focus in"
}
set-hook -g pane-focus-out { }

set-hook -g after-resize-pane {
  if -F '#{==:#{window_zoomed_flag},1}' { set status on }{ set -u status }
  display -d 1000 "Resized pane changed"
}
set-hook -g session-window-changed {
  if -F '#{==:#{window_zoomed_flag},1}' { set status on }{ set -u status }
  display -d 1000 "Session Window changed"
}

# }}}

# vim: foldmethod=marker
