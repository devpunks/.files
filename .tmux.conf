############################################################################
#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  <
#  \__|_| |_| |_|\__,_/_/\_\
#    - https://man.openbsd.org/OpenBSD-current/man1/tmux.1
#
#  Plugins:
#    - https://github.com/tmux-plugins
#  Issues:
#    - `property not found` issue - https://github.com/tmux/tmux/issues/1689
#    - special characters for tmux > 3.x - https://github.com/tmux/tmux/issues/1827
#
#  Cheatsheets:
#    - https://devhints.io/tmux
#    - https://tao-of-tmux.readthedocs.io
#    - https://jdhao.github.io/2021/01/25/tmux_cheatsheet
#    - https://www.seanh.cc/2020/12/28/setting-options-in-tmux/
#
#  WIKI:
#    - https://github.com/tmux/tmux/wiki
#    - https://github.com/tmux/tmux/wiki/Advanced-Use
#    - https://github.com/tmux/tmux/wiki/FAQ#how-do-i-translate--fg--bg-and--attr-options-into--style-options
#  Shortcuts:
#    <Prefix>   - C-a
#    <Prefix> c - New Window
#    <Prefix> d - Detach
#    <Prefix> f - Find Window
#    <Prefix> i - Info
#    <Prefix> n - Next
#    <Prefix> p - Prev
#    <Prefix> q - Panes
#    <Prefix> s - Sessions
#    <Prefix> t - Time
#    <Prefix> w - Windows
#    <Prefix> z - Zoom
#
############################################################################
# run-shell
#  - https://unix.stackexchange.com/questions/80473/how-do-i-run-a-shell-command-from-tmux-conf
# display-popup
#  popup-style, popup-border-style [rounded|simple|heavy|double], popup-border-lines
#  - https://github.com/tmux/tmux/issues/1842
#  - https://aliquote.org/post/tmux-little-hacks/
#  - https://blog.meain.io/2020/tmux-flating-scratch-terminal/
#  - https://gist.github.com/LintaoAmons/22f6184b26bd5b93d8fe9f9276f50f75

############################################################################
# {{{ Options
#  - https://superuser.com/questions/758843
#  - https://superuser.com/questions/1425921
############################################################################

#### set-clipboard

# {{{ set-option -s(erver) --------------------------------------------------------
%hidden BAR='BAZ'
set -g @pwd $PWD
set-environment -g DEVPUNKS ðŸ˜ˆROOOCKS
#backspace=BACKSPACE
# show-environment -g
# display-menu 'ðŸ˜ˆdevPunks'
# display-menu -t 1 -T "devPunks" -x 0 -y 0 "ðŸ¤˜ðŸ˜ˆðŸ¤˜hello" z lsp
# display-message 'ðŸ˜ˆdevPunks'
display-message '#{BAR} #{@pwd} #{PREFIX} #{DEVPUNKS}'

set -s editor vi
# https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-FocusIn_FocusOut
set -s focus-events on # for (neo|g)vim - https://github.com/vim/vim/pull/7673
set -s escape-time 50 # https://unix.stackexchange.com/questions/608142
set -s buffer-limit 10
set -s message-limit 100
set -s prompt-history-limit 100
set -s history-file '~/.tmux_history'
# https://unix.stackexchange.com/questions/1045/getting-256-colors-to-work-in-tmux
set -s default-terminal 'tmux-256color'
# https://github.com/tmux/tmux/wiki/FAQ#how-do-i-use-a-256-colour-terminal
set -s terminal-features ":256:RGB:ccolour:cstyle:ustyle:clipboard:mouse:focus:hyperlinks:strikethrough:sync:title:"
# https://github.com/tmux/tmux/issues/2606
# https://unix.stackexchange.com/questions/568260/how-is-default-terminal-compared-to-tmux-terminal-overrides/568263#568263
set -as terminal-overrides ',*-256color*:RGB:Tc' # See TMUX TERMINFO
# sane scrolling - https://superuser.com/questions/209437
# https://github.com/tmux/tmux/wiki/FAQ#why-are-tmux-pane-separators-dashed-rather-than-continuous-lines
set -as terminal-overrides ':XT:U8=0:smcup@:rmcup@' # XtermTitle/UP and DOWN arrows

# }}}

# {{{ set-option -g(lobal session) -------------------------------------------------
set-option -g prefix C-a # Reset Prefix to Control + a
set-option -g mode-keys vi   # Use vim keybindings in copy mode
set-option -g xterm-keys on  # for vim
set-option -g status-keys vi # vi movement keys
# holding arrow keys - https://blog.meain.io/2020/tmux-flating-scratch-terminal/
set-option -g repeat-time 1000
# https://stackoverflow.com/questions/18760281
set-option -g history-limit 1000
set-option -g default-shell $SHELL
# https://stackoverflow.com/questions/21947123/prevent-tmux-from-displaying-activity-in-window-n
# ittps://unix.stackexchange.com/questions/78093/how-can-i-make-tmux-monitor-a-window-for-inactivity
set-option -g visual-bell both
set-option -g visual-silence both
set-option -g visual-activity on
set-option -g monitor-bell on
set-option -g monitor-silence 1000
set-option -g monitor-activity on
set-option -g bell-action any # [any|current|other|none]
set-option -g silence-action any  # [any|current|other|none]
set-option -g activity-action any # [any|current|other|none]

# }}}

# TODO: REFACTOR
# {{{ set-option -p(ane) --------------------------------------------------------
set-option -g mode-style fg=colour13,reverse,bold # selection highlighting/prefix w (window list)
set-option -g window-style fg=default,dim,bg=terminal
set-option -g window-active-style fg=default,nodim,bg=brightblack

set-option -g pane-base-index 1
set-option -g pane-border-status top
set-option -g pane-border-format "ï¼œ #{pane_id}. #T ï¼ž"
set-option -g pane-border-indicators both # [colour|arrows|both]
set-option -g pane-border-lines heavy # [single|double|heavy|number]
set-option -g display-panes-colour magenta # prefix q panes list
set-option -g display-panes-active-colour brightmagenta # prefix q panes list
set-option -g pane-border-style fg=brightblack,bold,bg=terminal
set-option -g pane-active-border-style fg=magenta,bold,bg=default
 
# }}}

# {{{ set-window-option -g(lobal) -----------------------------------------------
set-window-option -g mouse on
set-window-option -g base-index 1
set-window-option -g fill-character 'ðŸ˜ˆ'
set-window-option -g cursor-colour color11
set-window-option -g allow-passthrough on # escape keys
set-window-option -g clock-mode-style 24
set-window-option -g clock-mode-colour color13
# https://superuser.com/questions/1708413/how-to-automatically-rename-tmux-window-to-an-aliased-command
set-window-option -g renumber-windows on # when window is closed
set-window-option -g automatic-rename on # Automatically set window title
set-window-option -g automatic-rename-format '#{:window_marked_flag/:window_name}#{b:pane_title/~/:pane_current_command/:command}'
set-window-option -g display-time 2000 # Notificationy display time
# Pane number display (Ctl-b)+q - https://unix.stackexchange.com/questions/307696
set-window-option -g display-panes-time 4000

# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
set-window-option -g aggressive-resize on

# }}}

# }}}

# ############################################################################
# {{{ Unbindings
# ############################################################################
unbind C-b # unbind default leader key
unbind [ # copy mode bound to escape key
unbind '(' # unbind kill previous session
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split
unbind j

# }}}

############################################################################
# {{{ Bindings
# - https://man.openbsd.org/OpenBSD-current/man1/tmux.1#DEFAULT_KEY_BINDINGS
############################################################################
bind-key C-a send-key C-a # https://stackoverflow.com/questions/9684115
bind-key a send-prefix # for nested tmux sessions
bind-key Escape copy-mode

# reload tmux conf
bind-key R source-file ~/.tmux.conf \; \
display-message "Source file loaded!"

# ZOOM: toggle
bind-key -n 'M-Space' resize-pane -Z

# https://superuser.com/questions/600286/move-pane-to-a-new-window-in-tmux
#  join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
#  [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                 (alias: joinp)
# bind C-j command-prompt "join-pane"
# bind-key j command-prompt "join-pane -s '%%'"
# bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

# {{{ windows -----------------------------------------------
#  MOUSE WHEEL TO CHANGE WINDOW TABS - https://wbk.one/%2Farticle%2F15%2Ftmux-mouse-support

# Double click on the window list to open a new window
bind-key -n DoubleClick1Status command-prompt -p ' ðŸ–±NEW ðŸ‘‰' 'new-window -n%%'
# Middle click on the window label to kill it
# ind-key -n MoouseClick2Status display-message "2 mouse click"
# ind-key -n MoouseClick3Status display-message "3 mouse click"
# ind-key -n WheelUp display-message "3 mouse click"

bind-key A command-prompt -p 'RENAME WINDOW ðŸ‘‰' 'rename-window %%'
bind-key C-n command-prompt -p 'NEW WINDOW ðŸ‘‰' 'new-window -n%%'

# kill -9
bind-key 'C-9' kill-window -t=
bind-key 'C-(' send -X kill-session

# }}}

# {{{ layouts -----------------------------------------------
## Drag panes (interchange them)
# Drag to re-order panes - 
bind-key -n MouseDrag1Pane swap-pane -dt=
# Drag to re-order windows - https://github.com/tmux/tmux/issues/656#issuecomment-56983404
bind-key -n MouseDrag1Status swap-window -dt=


bind-key 'M-r' rotate-window

bind-key 'M--' split-window -v # split pane horizontally
bind-key 'M-\' split-window -h # split pane vertically

# layouts tiled, even-horizontal, even-vertical, main-horizontal, main-vertical
bind-key 'C-=' select-layout "tiled"
bind-key 'C--' select-layout "even-vertical"
bind-key 'C-\' select-layout "even-horizontal"

# }}}

# {{{ panes -----------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# kill
bind-key 9 kill-pane

#previous pane
bind-key C-up prev
bind-key C-left prev

#next pane
bind-key C-right next
bind-key C-down next

# }}}

# {{{ resizing -----------------------------------------------
bind-key C-h resize-pane -L 7
bind-key C-j resize-pane -D 7
bind-key C-k resize-pane -U 7
bind-key C-l resize-pane -R 7

# }}}

# }}}

############################################################################
# {{{ Status Bar
#   - https://tao-of-tmux.readthedocs.io/en/latest/manuscript/09-status-bar.html
#   Formats:
#     - https://github.com/tmux/tmux/wiki/Formats
#     - https://github.com/tmux/tmux/wiki/Formats
############################################################################
set-window-option -g status-interval 1
set-window-option -g status-position bottom
set-window-option -g status-justify absolute-centre # [left|(absolute-)centre|right]

set-window-option -g message-line 4 # row position (0-5)
set-window-option -g message-command-style fg=colour132,bg=green
set-window-option -g message-style fg=brightmagenta,blink,bold,bg=colour234

# Titles (window number, program name, active (or not)
#  printf '\033]2;title\007' # PRINTS TITLE TO HEADER
#  - https://unix.stackexchange.com/questions/60968/tmux-bottom-bar-color-change/60969
#  - https://stackoverflow.com/questions/16624752/tmux-how-to-configure-tmux-to-display-the-current-working-directory-of-a-pane-o
set-window-option -g set-titles on
set-window-option -g set-titles-string 'ðŸ‘¨ðŸ’»#H:#{session_name} Titles String'

# Multiple Status Lines
set-window-option -g status 5 # lines (on|0-5|off)
set-window-option -g status-bg black
set-window-option -g status-fg magenta
# set-window-option -g status-format[0] '* Window tabs *' # 0th line
set-window-option -g status-format[1] '#( uptime )' # 1st line
set-window-option -g status-format[2] 'SocketðŸ”Œ #[fg=magenta,italic,dim,reverse]#{socket_path}2' # 2nd line
set-window-option -g status-format[3] '#[fg=blue,reverse]#{?pane_in_mode,"Copy"}' # 3rd line
set-window-option -g status-format[4] \
  'PREFIX: #[fg=blue,bold,reverse] #( tmux show -gv prefix | sed 's/C-/\^/' ) #[default]'

set-window-option -g window-status-separator '|'
set-window-option -g window-status-format ' â–³ #W '
set-window-option -g window-status-current-format '#[fg=black,bold,underscore,bg=white] â–² #W #F#[default]'
# set-window-option -g window-status-style fg=white,bg=black
# set-window-option -g window-status-current-style fg=black,bold,bg=white
# format '#[fg=colour234]#[bg=magenta]â—¢#[default] â—‰#[fg=default,underscore]#F#W #[default] #[fg=colour234]#[bg=magenta]â—£#[default]'

# Window tab notification styles
set-window-option -g window-status-bell-style fg=blue,bg=red
set-window-option -g window-status-activity-style fg=black,bg=cyan

set-window-option -g status-style fg=red,bg=blue

set-window-option -g status-left-length 70
set-window-option -g status-left-style fg=default,bg=default
set-window-option -g status-left "#{?client_prefix,#[reverse]#[fg=cyan],} #( tmux show -gv prefix | sed 's/C-/\^/' ) #[default] #{session_name} @ #[bold,italic]ðŸ“‚#{=|-20|â€¦:pane_current_path}/#[default]"

# set-window-option -g status-right-length 40
set-window-option -g status-right-style fg=default,bg=default
#set-window-option -ag status-left ' #{session_name} @ '
#set-window-option -ag status-left '#[fg=bold,italic]ðŸ“‚#{=|-20|...:pane_current_path}/#[default]'
# set-window-option -g status-right '#[fg=colour231,italics]ðŸ‘¨ðŸ’»#S #[default]#[fg=colour143,dim]ðŸ•› %m-%d %R#(acpi | cut -d ',' -f 2) #[default]'

# set-window-option -ga status-left ''
# set-window-option -ga status-right ''

# }}}

# #############################################################################&
# # {{{ Copy & Pasta
# #  - https://github.com/tmux/tmux/wiki/Clipboard
# #  - $$$$$$ https://news.ycombinator.com/item?id=23004062
# #  - http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
# ############################################################################
# 
# # Setup 'v' to begin selection as in Vim
# bind-key -T copy-mode-vi v send -X begin-selection
# #bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace termux-clipboard-set"
# # copy-pipe "reattach-to-user-namespace pbcopy"
# 
# # Update default binding of `Enter` to also use copy-pipe
# # unbind -t vi-copy Enter
# #bind-key -T vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"\; send X copy-selection-and-cancel\;
# 
# #bind -T copy-mode-vi M-y send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"
# 
# # Clipboard integration
# # https://www.freecodecamp.org/news/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b/
# # ctrl+c to send to clipboard
# #bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# # ctrl+v to paste from clipboard
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
# # paste from right click
# # unbind-key MouseDown3Pane
# bind-key -n MouseDown3Pane run " \
#   X=$(xclip -o -sel clipboard); \
#   tmux paste-buffer -p; Mouse\
#   tmux set-buffer \"$X\"; \
#   tmux paste-buffer -p; Mouse\
#   tmux display-message 'pasted!' \
#   tmux diplay-message 'DEVPUNKS' \
# "
# # bind-key -n MouseDown3Pane run " \
# # "
# 
# # Selection with mouse should copy to clipboard right away, in addition to the default action.
# #unbind -n -T copy-mode-vi MouseDragEnd1Pane
# #bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel clipboard > /dev/null"
# # bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel
# 
# 
# ## Clipboard integration (only applicable when you have an X server running)
# 
# # Selection with mouse should copy to clipboard right away, in addition to the default action.
# # Unbind the default action first.
# unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
# bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run &quot;tmux save-buffer - | xclip -i -sel clipboard &gt; /dev/null&quot;
# # Copy mode copy should also copy it to the clipboard as well.
# unbind -Tcopy-mode-vi Enter
# bind -Tcopy-mode-vi Enter send -X copy-selection-and-cancel\; run &quot;tmux save-buffer - | xclip -i -sel clipboard &gt; /dev/null&quot;
# # Right click to paste from the clipboard
# # If you like middle click better, change MouseDown3Pane to MouseDown2Pane for middle click.
# unbind-key MouseDown3Pane
# bind-key -n MouseDown3Pane run &quot;tmux set-buffer \&quot;$(xclip -o -sel clipboard)\&quot;; tmux p
# 
# # }}}

## {{{ DOUBLE CLICK To OPEN
# set -g word-separators ""
# bind -n C-DoubleClick1Pane if -F '#{m/r:^[^:]*:[0-9]+:,#{mouse_word}}' {
#         run -C { popup -w90% -h90% -E -d '#{pane_current_path}' '
#                 emacs `echo #{mouse_word}|awk -F: "{print \"+\"\\$2,\\$1}"`
#         ' }
# } {
#         run -C { popup -w90% -h90% -E -d '#{pane_current_path}' '
#                 emacs "#{mouse_word}"
#         ' }
# }
## }}}
