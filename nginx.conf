#
#                   d8b                                                  .d888
#                   Y8P                                                 d88P"
#                                                                       888
# 88888b.   .d88b.  888 88888b.  888  888      .d8888b .d88b.  88888b.  888888
# 888 "88b d88P"88b 888 888 "88b `Y8bd8P'     d88P"   d88""88b 888 "88b 888
# 888  888 888  888 888 888  888   X88K       888     888  888 888  888 888
# 888  888 Y88b 888 888 888  888 .d8""8b. d8b Y88b.   Y88..88P 888  888 888
# 888  888  "Y88888 888 888  888 888  888 Y8P  "Y8888P "Y88P"  888  888 888
#               888
#          Y8b d88P
#           "Y88P"
#
# -------------------------------------------------------------------------
# File: nginx.confi
# Help: man nginx
# Source: https://github.com/devpunks
# Author: Ahmid-Ra (github.com/snuggs)
# Maintainer: devPunks <https://github.com/devpunks>
# Description: NGINX configuration file
# -------------------------------------------------------------------------

#user  nobody;
worker_processes  4; # number of cores

error_log var/log/nginx/error.log;
error_log var/log/nginx/error.log  info;
error_log var/log/nginx/error.log  notice;

# pid $HOME/nginx.pid;


events {
  worker_connections  1024;
}


http {
  default_type  application/octet-stream;
  include /data/data/com.termux/files/usr/etc/nginx/mime.types;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log var/log/nginx/access.log main;

  #gzip  on;
  #tcp_nopush     on;
  sendfile        on;
  #keepalive_timeout  0;
  keepalive_timeout  65;

  #gzip  on;

  server { # NGINX
    listen       8888;
    server_name  localhost;

    # charset koi8-r;

    access_log var/log/nginx/nginx.log;

    location / {
      root  /data/data/com.termux/files/usr/share/nginx/html;
      index  index.html;
    }

    error_page  404 400  /40x.html;
    location = /40x.html {
      root  /data/data/com.termux/files/usr/share/nginx/html;
    } # location

    # redirect server error pages to the static page /50x.html
    #
    error_page  500 502 503 504  /50x.html;
    location = /50x.html {
      root  /data/data/com.termux/files/usr/share/nginx/html;
    } # location
  } # server


  server { # HTTPS
  #  listen       443 ssl;
  #  server_name  localhost;

  #  ssl_certificate      cert.pem;
  #  ssl_certificate_key  cert.key;

  #  ssl_session_cache    shared:SSL:1m;
  #  ssl_session_timeout  5m;

  #  ssl_ciphers  HIGH:!aNULL:!MD5;
  #  ssl_prefer_server_ciphers  on;

  #  location / {
  #      root   html;
  #      index  index.html index.htm;
  #  }
  } # server


  server { # APACHE
    listen       2024;
    server_name  apache;

    # charset koi8-r;

    access_log var/log/nginx/apache.log;

    # proxy request
    location / {
      proxy_pass   http://localhost:8080;
    }
  } # server


  # another virtual host using mix of IP-, name-, and port-based configuration
  #
  server { # BOOBSBAGS.COM
    listen       8181;
    server_name  boobsbags  alias  boobsbags.alias;

    access_log var/log/nginx/boobsbags.log;

    # proxy request
 #  location / {
 #    proxy_pass   http://localhost:8000;
 #  } # location

    location / {
      index  index.html;
      root  /data/data/com.termux/files/home/COM.BOOBSBAGS/public;
    } # location
  } # server


  server { # PHP
   # proxy the PHP scripts to Apache listening on 127.0.0.1:80
   #
   #location ~ \.php$ {
   #  proxy_pass   http://127.0.0.1;
   #}

   # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
   #
   #location ~ \.php$ {
   #  root           html;
   #  fastcgi_pass   127.0.0.1:9000;
   #  fastcgi_index  index.php;
   #  fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
   #  include        fastcgi_params;
   #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #  deny  all;
    #}
  } # server

} # http
